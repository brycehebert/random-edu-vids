{"version":3,"sources":["reducers/videoSlice.js","reducers/playlistSlice.js","components/MainVideo.js","components/PlaylistItem.js","components/Playlist.js","components/PlayerControl.js","components/ChannelBox.js","channels.js","components/OptionsPanel.js","components/App.js","store.js","index.js"],"names":["videoSlice","createSlice","name","initialState","autoplay","videoState","reducers","setAutoPlay","state","action","payload","setVideoState","actions","playlistAdapter","createEntityAdapter","selectId","video","resourceId","videoId","getInitialState","status","currentPlaying","prevVideo","nextVideo","firstVideo","lastVideo","getPlaylist","createAsyncThunk","a","axios","get","response","data","getCustomPlaylist","params","selectedChannels","playlistSlice","nextVideoPressed","index","ids","findIndex","ele","prevButtonPressed","shuffleButtonPressed","setAll","length","playlistItemClicked","extraReducers","builder","addCase","pending","fulfilled","getSelectors","playlist","selectVideos","selectAll","selectVideoById","selectById","selectIds","MainVideo","store","useStore","dispatch","useDispatch","currentVideo","useSelector","getState","className","opts","playerVars","onStateChange","e","YouTube","PlayerState","ENDED","PlaylistItem","currentVid","onClick","Item","align","src","thumbnails","medium","url","size","alt","title","style","width","weight","textAlign","subtitle","mb","channelTitle","Playlist","videos","playlistRef","useRef","onPlaylistItemClicked","onPlaylistWheel","useCallback","current","scrollLeft","scrollWidth","clientWidth","deltaY","preventDefault","useEffect","onwheel","playlistItems","map","ref","breakpoint","display","justifyContent","flexWrap","PlayerControl","ap","alignItems","fontSize","mr","ml","mx","shuffled","array","newArray","i","j","Math","floor","random","tempi","tempj","shuffle","Checkbox","value","defaultChecked","onChange","target","checked","ChannelBox","channel","handleClick","py","id","m","avatarUrl","rounded","channelName","channelsInfo","OptionsPanel","useState","selected","setSelected","handleCheckbox","newSelected","channelIndex","push","splice","channels","Control","tablet","my","color","join","console","log","App","loadingStatus","mt","marginless","Column","paddingless","configureStore","reducer","playlistReducer","videoReducer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.333d9ebe.chunk.js","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = {\r\n  autoplay: 0,\r\n  videoState: -1\r\n};\r\n\r\nconst videoSlice = createSlice({\r\n  name: \"video\",\r\n  initialState,\r\n  reducers: {\r\n    setAutoPlay(state, action) {\r\n      state.autoplay = action.payload;\r\n    },\r\n    setVideoState(state, action) {\r\n      state.videoState = action.payload;\r\n    }\r\n  }\r\n});\r\n\r\nexport const { setAutoPlay, setVideoState } = videoSlice.actions;\r\n\r\nexport default videoSlice.reducer;\r\n","import { createSlice, createAsyncThunk, createEntityAdapter } from \"@reduxjs/toolkit\";\r\nimport axios from \"axios\";\r\n\r\nconst playlistAdapter = createEntityAdapter({\r\n  selectId: (video) => video.resourceId.videoId\r\n});\r\n\r\nconst initialState = playlistAdapter.getInitialState({\r\n  status: \"idle\",\r\n  currentPlaying: \"\",\r\n  prevVideo: \"\",\r\n  nextVideo: \"\",\r\n  firstVideo: \"\",\r\n  lastVideo: \"\"\r\n});\r\n\r\nexport const getPlaylist = createAsyncThunk(\"playlist/getPlaylist\", async () => {\r\n  const response = await axios.get(\"https://random-edu-vids.herokuapp.com/api/getPlaylist\");\r\n  return response.data;\r\n});\r\n\r\nexport const getCustomPlaylist = createAsyncThunk(\"playlist/getCustomPlaylist\", async (payload) => {\r\n  const response = await axios.get(\"https://random-edu-vids.herokuapp.com/api/getCustomPlaylist\",{\r\n    params: {selectedChannels: payload}\r\n  });\r\n  \r\n  return response.data;\r\n})\r\n\r\nconst playlistSlice = createSlice({\r\n  name: \"playlist\",\r\n  initialState,\r\n  reducers: {\r\n    nextVideoPressed(state, action) {\r\n      state.prevVideo = state.currentPlaying;\r\n      state.currentPlaying = state.nextVideo;\r\n      if (state.nextVideo === state.lastVideo) {\r\n        state.nextVideo = state.firstVideo;\r\n        return;\r\n      }\r\n      let index = state.ids.findIndex((ele) => ele === state.nextVideo);\r\n      state.nextVideo = state.ids[index + 1];\r\n    },\r\n    prevButtonPressed(state, action) {\r\n      state.nextVideo = state.currentPlaying;\r\n      state.currentPlaying = state.prevVideo;\r\n      if (state.prevVideo === state.firstVideo) {\r\n        state.prevVideo = state.lastVideo;\r\n        return;\r\n      }\r\n      let index = state.ids.findIndex((ele) => ele === state.prevVideo);\r\n      state.prevVideo = state.ids[index - 1];\r\n    },\r\n    shuffleButtonPressed(state, action) {\r\n      playlistAdapter.setAll(state, action.payload);\r\n      state.currentPlaying = state.firstVideo = state.ids[0];\r\n      state.nextVideo = state.ids[1];\r\n      state.prevVideo = state.lastVideo = state.ids[state.ids.length - 1];\r\n    },\r\n    playlistItemClicked(state, action) {\r\n      state.currentPlaying = action.payload;\r\n      let index = state.ids.findIndex(ele => ele === action.payload);\r\n      if (index === state.ids.length - 1) {\r\n        state.nextVideo = state.firstVideo\r\n      } else {\r\n        state.nextVideo = state.ids[index + 1];\r\n      }\r\n      if (index === 0) {\r\n        state.prevVideo = state.lastVideo;\r\n      } else {\r\n        state.prevVideo = state.ids[index - 1];\r\n      }\r\n    }\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(getPlaylist.pending, (state, action) => {\r\n        state.status = \"loading\";\r\n      })\r\n      .addCase(getPlaylist.fulfilled, (state, action) => {\r\n        playlistAdapter.setAll(state, action.payload);\r\n        state.currentPlaying = state.firstVideo = state.ids[0];\r\n        state.nextVideo = state.ids[1];\r\n        state.prevVideo = state.lastVideo = state.ids[state.ids.length - 1];\r\n        state.status = \"idle\";\r\n      })\r\n      .addCase(getCustomPlaylist.pending, (state, action) => {\r\n        state.status = \"loading\";\r\n      })\r\n      .addCase(getCustomPlaylist.fulfilled, (state, action) => {\r\n        playlistAdapter.setAll(state, action.payload);\r\n        state.currentPlaying = state.firstVideo = state.ids[0];\r\n        state.nextVideo = state.ids[1];\r\n        state.prevVideo = state.lastVideo = state.ids[state.ids.length - 1];\r\n        state.status = \"idle\";\r\n      })\r\n  }\r\n});\r\n\r\nexport const {\r\n  selectAll: selectVideos,\r\n  selectById: selectVideoById,\r\n  selectIds: selectVideoIds\r\n} = playlistAdapter.getSelectors((state) => state.playlist);\r\n\r\nexport const { nextVideoPressed, prevButtonPressed, shuffleButtonPressed, playlistItemClicked } = playlistSlice.actions;\r\n\r\nexport default playlistSlice.reducer;\r\n","import \"../stylesheets/MainVideo.scss\";\r\nimport YouTube from \"react-youtube\";\r\nimport { useSelector, useDispatch, useStore } from \"react-redux\";\r\nimport { setVideoState } from \"../reducers/videoSlice\";\r\nimport { selectVideoById, nextVideoPressed } from \"../reducers/playlistSlice\";\r\n\r\nconst MainVideo = () => {\r\n  const store = useStore();\r\n  const dispatch = useDispatch();\r\n  let currentVideo = useSelector(state => selectVideoById(state, state.playlist.currentPlaying));\r\n  let autoplay = store.getState().video.autoplay //Only need autoplay setting at end of video. So don't use selector (would cause re-render).\r\n\r\n  const videoStateChanged = e => {\r\n    dispatch(setVideoState(e.data))\r\n    autoplay = store.getState().video.autoplay\r\n    if (e.data === YouTube.PlayerState.ENDED) {\r\n      dispatch(nextVideoPressed());\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"MainVideo\">\r\n      <YouTube videoId={currentVideo.resourceId.videoId} opts={{playerVars: {autoplay: autoplay}}} onStateChange={videoStateChanged} className=\"youtube-player\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MainVideo;\r\n","import { Media, Image, Heading, Container } from \"react-bulma-components\";\r\nimport \"../stylesheets/PlaylistItem.scss\";\r\n\r\nconst PlaylistItem = ({ video, currentVid, onClick }) => {\r\n  return (\r\n    <div\r\n      className={`PlaylistItem mx-1 ${currentVid === video.resourceId.videoId ? \"playlist-current-video\" : \"\"}`}\r\n      onClick={() => onClick(video.resourceId.videoId)}\r\n    >\r\n      {\" \"}\r\n      {/* Highlight current playing video */}\r\n      <Media>\r\n        <Media.Item align=\"left\">\r\n          <Image src={video.thumbnails.medium.url} size=\"16by9\" alt={video.title} style={{ width: \"160px\" }} />\r\n        </Media.Item>\r\n      </Media>\r\n      <Container className=\"truncate\">\r\n        <Heading title={video.title} className=\"playlist-video-title\" size={6} weight=\"light\" textAlign=\"left\">\r\n          {video.title}\r\n        </Heading>\r\n        <Heading size={6} subtitle className=\"playlist-video-channel\" weight=\"default\" textAlign=\"left\" mb={2}>\r\n          {video.channelTitle}\r\n        </Heading>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PlaylistItem;\r\n","import { useRef, useEffect, useCallback } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport \"../stylesheets/Playlist.scss\";\r\nimport { Container } from \"react-bulma-components\";\r\nimport PlaylistItem from \"./PlaylistItem\";\r\nimport { selectVideos, playlistItemClicked } from \"../reducers/playlistSlice\";\r\n\r\nconst Playlist = () => {\r\n  let dispatch = useDispatch();\r\n  let videos = useSelector(selectVideos);\r\n  let currentVid = useSelector((state) => state.playlist.currentPlaying);\r\n  const playlistRef = useRef(); //Reference to Playlist dom element\r\n\r\n  const onPlaylistItemClicked = (videoId) => {\r\n    if (videoId === currentVid) return;\r\n    dispatch(playlistItemClicked(videoId));\r\n  };\r\n  //Make Playlist scroll horizontally with mouse wheel\r\n  const onPlaylistWheel = useCallback((e) => {\r\n    let { scrollLeft, scrollWidth, clientWidth } = playlistRef.current;\r\n\r\n    if (scrollLeft >= scrollWidth - clientWidth && e.deltaY > 0) return; //At end of list and trying to scroll more left\r\n    if (scrollLeft === 0 && e.deltaY < 0) return; //At beginning of list and trying to scroll more right\r\n\r\n    playlistRef.current.scrollLeft += e.deltaY;\r\n    e.preventDefault(); //Prevents main page from scrolling while scrolling in playlist\r\n  }, []);\r\n\r\n  //Assign onwheel to the dom element\r\n  useEffect(() => {\r\n    playlistRef.current.onwheel = onPlaylistWheel;\r\n  }, [onPlaylistWheel]);\r\n\r\n  let playlistItems = videos.map((ele, index) => (\r\n    <PlaylistItem key={index} video={ele} currentVid={currentVid} onClick={onPlaylistItemClicked} />\r\n  ));\r\n\r\n  return (\r\n    <div className=\"Playlist\" ref={playlistRef}>\r\n      <Container\r\n        className=\"playlist-container\"\r\n        breakpoint=\"widescreen\"\r\n        display=\"flex\"\r\n        justifyContent=\"flex-start\"\r\n        flexWrap=\"nowrap\"\r\n      >\r\n        {playlistItems}\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Playlist;\r\n","import SkipNextIcon from \"@mui/icons-material/SkipNext\";\r\nimport SkipPreviousIcon from \"@mui/icons-material/SkipPrevious\";\r\nimport ShuffleIcon from \"@mui/icons-material/Shuffle\";\r\n\r\nimport \"../stylesheets/PlayerControl.scss\";\r\nimport { Form, Container } from \"react-bulma-components\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { setAutoPlay } from \"../reducers/videoSlice\";\r\nimport { nextVideoPressed, prevButtonPressed, selectVideos, shuffleButtonPressed  } from \"../reducers/playlistSlice\";\r\n\r\n//Fisher-Yates shuffle\r\nconst shuffle = (array) => {\r\n  const newArray = [...array]\r\n\r\n  let i = newArray.length;\r\n  while (--i) {\r\n    let j = Math.floor(Math.random() * (i + 1));\r\n    let tempi = newArray[i];\r\n    let tempj = newArray[j];\r\n    newArray[i] = tempj;\r\n    newArray[j] = tempi;\r\n  }\r\n  return newArray;\r\n};\r\n\r\nconst PlayerControl = () => {\r\n  let dispatch = useDispatch();\r\n  let videos = useSelector(selectVideos);\r\n  let ap = useSelector(state => state.video.autoplay);\r\n\r\n  const onNextButton = () => {\r\n    dispatch(nextVideoPressed());\r\n  };\r\n  const onPrevButton = () => {\r\n    dispatch(prevButtonPressed());\r\n  };\r\n  const onShuffleButton = () => {\r\n    let shuffled = shuffle(videos);\r\n    dispatch(shuffleButtonPressed(shuffled));\r\n  };\r\n  const onAutoPlayClicked = (e) => {\r\n    dispatch(setAutoPlay(e.target.checked ? 1 : 0))\r\n  }\r\n  return (\r\n    <Container className=\"PlayerControl\" display=\"flex\" alignItems=\"center\">\r\n      <SkipPreviousIcon fontSize=\"large\" mr=\"2\" onClick={onPrevButton} />\r\n      <SkipNextIcon fontSize=\"large\" ml=\"2\" onClick={onNextButton} />\r\n      <ShuffleIcon fontSize=\"large\" mx=\"2\" onClick={onShuffleButton} />\r\n      <Form.Checkbox  value=\"AutoPlay\" ml=\"4\" defaultChecked={ap} onChange={onAutoPlayClicked}>AutoPlay</Form.Checkbox>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default PlayerControl;\r\n","import { Container, Media, Image, Form, Heading } from \"react-bulma-components\";\r\nimport \"../stylesheets/ChannelBox.scss\"\r\n\r\nconst ChannelBox = ({channel, handleClick}) => {\r\n  return (\r\n    <div className=\"ChannelBox\">\r\n      <Container display=\"flex\" alignItems=\"center\" py=\"2\">\r\n        <Form.Checkbox name=\"channel\" value={channel.id} display=\"inline\" defaultChecked={true} onChange={handleClick} m=\"5\" />\r\n        <Media>\r\n          <Media.Item align=\"left\" display=\"inline-block\">\r\n            <Image src={channel.avatarUrl} size={48} rounded  />\r\n          </Media.Item>\r\n        </Media>\r\n        <Heading size={5}>{channel.channelName}</Heading>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChannelBox;\r\n","const channelsInfo = [\r\n  { id: \"cgpgrey\", channelName: \"CGP Grey\", avatarUrl:\"https://yt3.ggpht.com/ytc/AKedOLS7B0VZFxgHWsLLpXC2rHY7bflcvjVuN68OFVY6=s240-c-k-c0x00ffffff-no-rj\" },\r\n  //{ id: \"vsauce\", channelName: \"Vsauce\", avatarUrl: \"https://yt3.ggpht.com/ytc/AKedOLSCpbn6_3KOR7zAuqaS9fXtX7JAb0AQ6Y_f33ohog=s240-c-k-c0x00ffffff-no-rj\" },\r\n  { id: \"veritasium\", channelName: \"Veritasium\", avatarUrl: \"https://yt3.ggpht.com/ytc/AKedOLS6qhCOSn2LBAn1k1QnFYAMXAxGso7PnOeqWruerA=s240-c-k-c0x00ffffff-no-rj\" },\r\n  { id: \"smartereveryday\", channelName: \"SmarterEveryDay\", avatarUrl: \"https://yt3.ggpht.com/ytc/AKedOLQjGSf-ONLuBlcY6KzEFJqoaIJNjiXvM-iahXv7Cg=s240-c-k-c0x00ffffff-no-rj\" },\r\n  { id: \"markrober\", channelName: \"Mark Rober\", avatarUrl: \"https://yt3.ggpht.com/ytc/AKedOLRN1579qcowoOyJZgtiLI2CKMBqvHqEWFYvhrri=s240-c-k-c0x00ffffff-no-rj\" },\r\n  { id: \"nilered\", channelName: \"NileRed\", avatarUrl: \"https://yt3.ggpht.com/ytc/AKedOLTVNZe9V4AH3f-ttOD_Xow8M5jACEWUQ9Gd0GMs8A=s240-c-k-c0x00ffffff-no-rj\" },\r\n  { id: \"realengineering\", channelName: \"Real Engineering\", avatarUrl: \"https://yt3.ggpht.com/ytc/AKedOLRHtlYUfKRGpaVbGFvz8w2M8r91QToE7kk_n2Hgnw=s240-c-k-c0x00ffffff-no-rj\" }\r\n];\r\n\r\nexport default channelsInfo;","import \"../stylesheets/OptionsPanel.scss\";\r\nimport { Form, Button, Container } from \"react-bulma-components\";\r\nimport ChannelBox from \"./ChannelBox\";\r\nimport channelsInfo from \"../channels\";\r\nimport { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { getCustomPlaylist } from \"../reducers/playlistSlice\";\r\n\r\nconst OptionsPanel = () => {\r\n  let dispatch = useDispatch();\r\n  const [selected, setSelected] = useState(channelsInfo.map((ele) => ele.id));\r\n\r\n  const handleCheckbox = (e) => {\r\n    let newSelected = [...selected];\r\n    let value = e.target.value;\r\n    let channelIndex = newSelected.findIndex((ele) => ele === value);\r\n\r\n    if (e.target.checked) {\r\n      if (channelIndex === -1) {\r\n        newSelected.push(value);\r\n      }\r\n    } else {\r\n      if (channelIndex !== -1) {\r\n        newSelected.splice(channelIndex, 1);\r\n      }\r\n    }\r\n    setSelected(newSelected);\r\n  };\r\n\r\n  const handleGetPlaylist = () => {\r\n    if (selected.length === 0) {\r\n      console.log(\"Must select at least one channel\");\r\n      return;\r\n    }\r\n\r\n    let payload = selected.join(\" \");\r\n    dispatch(getCustomPlaylist(payload));\r\n  };\r\n\r\n  let channels = channelsInfo.map((ele, index) => (\r\n    <ChannelBox key={index} channel={ele} handleClick={handleCheckbox} />\r\n  ));\r\n\r\n  return (\r\n    <div className=\"OptionsPanel\">\r\n      <Form.Control>\r\n        {channels}\r\n        <Container textAlign=\"center\" tablet={{ textAlign: \"left\" }}>\r\n          <Button my={2} color=\"info\" onClick={handleGetPlaylist}>\r\n            Get New Playlist\r\n          </Button>\r\n        </Container>\r\n      </Form.Control>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OptionsPanel;\r\n","import \"../stylesheets/App.scss\";\nimport MainVideo from \"./MainVideo\";\nimport Playlist from \"./Playlist\";\nimport PlayerControl from \"./PlayerControl\";\nimport OptionsPanel from \"./OptionsPanel\";\nimport { Container, Columns } from \"react-bulma-components\";\nimport { useSelector } from \"react-redux\";\n\nconst App = () => {\n  let loadingStatus = useSelector((state) => state.playlist.status);\n\n  return (\n    <div className=\"App\">\n      {loadingStatus === \"loading\" ? <></> : <>\n      <Container breakpoint=\"widescreen\" mt=\"1\">\n        <MainVideo />\n      </Container>\n      <Container breakpoint=\"widescreen\" my=\"3\">\n        <Playlist />\n      </Container></>}\n      <Container breakpoint=\"widescreen\" mt=\"3\">\n        <Columns breakpoint=\"tablet\" marginless>\n          <Columns.Column textAlign=\"center\" tablet={{ textAlign: \"left\" }} paddingless>\n            <PlayerControl />\n          </Columns.Column>\n          <Columns.Column textAlign=\"center\" tablet={{ textAlign: \"right\" }} paddingless>\n            <OptionsPanel />\n          </Columns.Column>\n        </Columns>\n      </Container>\n    </div>\n  );\n};\n\nexport default App;\n","import { configureStore } from \"@reduxjs/toolkit\"\r\nimport playlistReducer from \"./reducers/playlistSlice\"\r\nimport videoReducer from \"./reducers/videoSlice\"\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    playlist: playlistReducer,\r\n    video: videoReducer\r\n  }\r\n})\r\n\r\nexport default store;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport \"./index.scss\";\nimport 'bulma/css/bulma.min.css';\nimport App from \"./components/App\";\n\nimport store from \"./store\";\nimport { getPlaylist } from \"./reducers/playlistSlice\";\n\nstore.dispatch(getPlaylist())\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\"));\n"],"sourceRoot":""}